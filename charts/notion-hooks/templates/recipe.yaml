---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: {{ include "notion-hooks.fullname" . }}
  labels:
    {{- include "notion-hooks.labels" . | nindent 4 }}
  namespace: {{ .Release.namespace }}
spec:
  service:
    ports:
    - port: {{ .Values.global.webhook.servicePort }}
      targetPort: {{ .Values.global.webhook.servicePort }}
  webhook:
{{- if .Values.routes.recipeImport.enabled }}
    recipe-import:
      authSecret: {{ .Values.routes.recipeImport.webhook.authSecret | default .Values.global.webhook.authSecret | toYaml | nindent 8 }}
      endpoint: {{ .Values.routes.recipeImport.webhook.endpoint | default "/recipe-import" }}
      method: POST
      port: {{ .Values.global.servicePort }}
      url: ""
{{ end -}}
{{- if .Values.routes.kindleHighlightsSync.enabled }}
    kindle-highlights-sync:
      authSecret: {{ .Values.routes.kindleHighlightsSync.webhook.authSecret | default .Values.global.webhook.authSecret | toYaml | nindent 8 }}
      endpoint: {{ .Values.routes.kindleHighlightsSync.webhook.endpoint | default "/kindle-highlights-sync" }}
      method: POST
      port: {{ .Values.global.webhook.servicePort | quote }}
      url: ""
{{ end -}}

---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ include "notion-hooks.fullname" . }}
  labels:
    {{- include "notion-hooks.labels" . | nindent 4 }}
  namespace: {{ .Release.namespace }}
spec:
  dependencies:
{{- if .Values.routes.recipeImport.enabled }}
  - eventName: recipe-import
    eventSourceName: {{ include "notion-hooks.fullname" . }}
    name: notion-hooks-events-recipe-import
{{ end -}}
{{- if .Values.routes.kindleHighlightsSync.enabled }}
  - eventName: kindle-highlights-sync
    eventSourceName: {{ include "notion-hooks.fullname" . }}
    name: notion-hooks-events-kindle-highlights-sync
{{- end }}
  template:
    serviceAccountName: {{ .Values.routes.recipeImport.sensor.serviceAccountName | default .Values.global.sensor.serviceAccountName }}
  triggers:
{{- if .Values.routes.recipeImport.enabled }}
  - template:
      k8s:
        group: argoproj.io
        operation: create
        parameters:
        - dest: spec.arguments.parameters.0.value
          src:
            dataKey: body.url
            dependencyName: notion-hooks-events-recipe-import
        resource: workflows
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: notion-hooks-recipe-import-
              namespace: {{ .Values.routes.recipeImport.workflow.namespace | default .Values.global.workflow.namespace }}
            spec:
              arguments:
                parameters:
                - name: body
                  value: temp
              entrypoint: kindle
              serviceAccountName: {{ .Values.routes.recipeImport.workflow.serviceAccountName | default .Values.global.workflow.serviceAccountName }}
              templates:
              - container:
                  command:
                  - notion-hooks
                  - recipe-import
                  - --url
                  - "{{`{{inputs.parameters.url}}`}}"
                  env:
                  - name: NOTION_API_KEY
                    valueFrom:
                      secretKeyRef:
                        key: notion_api_key
                        name: notion-secret
                  - name: NOTION_DB_ID
                    valueFrom:
                      secretKeyRef:
                        key: recipe_import_db_id
                        name: notion-secret
                  image: {{ printf "%s:%s" (.Values.routes.recipeImport.workflow.image.repository | default .Values.global.workflow.image.repository) (.Values.routes.recipeImport.workflow.image.tag | default .Values.global.workflow.image.tag)}}
                inputs:
                  parameters:
                  - name: url
                name: notion-hooks-recipe-import
              ttlStrategy:
                secondsAfterCompletion: 3600
                secondsAfterFailure: 3600
                secondsAfterSuccess: 3600
              volumes:
              - name: notion-secret
                secret:
                  secretName: {{ .Values.routes.recipeImport.workflow.notionSecretName | default .Values.global.workflow.notionSecretName }}
        version: v1alpha1
      name: notion-hooks-recipe-import
{{ end -}}
{{- if .Values.routes.kindleHighlightsSync.enabled }}
  - template:
      k8s:
        group: argoproj.io
        operation: create
        parameters:
        - dest: spec.arguments.parameters.0.value
          src:
            dataKey: body.html
            dependencyName: notion-hooks-events-kindle-highlights-sync
        resource: workflows
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: notion-hooks-kindle-highlights-sync-
              namespace: {{ .Values.routes.kindleHighlightsSync.workflow.namespace | default .Values.global.workflow.namespace }}
            spec:
              arguments:
                parameters:
                - name: body
                  value: temp
              entrypoint: kindle
              serviceAccountName: {{ .Values.routes.kindleHighlightsSync.workflow.serviceAccountName | default .Values.global.workflow.serviceAccountName }}
              templates:
              - container:
                  command:
                  - notion-hooks
                  - kindle-highlights-sync
                  - --html
                  - "{{`{{inputs.parameters.html}}`}}"
                  env:
                  - name: NOTION_API_KEY
                    valueFrom:
                      secretKeyRef:
                        key: notion_api_key
                        name: notion-secret
                  - name: NOTION_DB_ID
                    valueFrom:
                      secretKeyRef:
                        key: kindle_highlights_sync_db_id
                        name: notion-secret
                  image: {{ printf "%s:%s" (.Values.routes.kindleHighlightsSync.workflow.image.repository | default .Values.global.workflow.image.repository) (.Values.routes.kindleHighlightsSync.workflow.image.tag | default .Values.global.workflow.image.tag)}}
                inputs:
                  parameters:
                  - name: html
                name: notion-hooks-kindle-highlights-sync
              ttlStrategy:
                secondsAfterCompletion: 3600
                secondsAfterFailure: 3600
                secondsAfterSuccess: 3600
              volumes:
              - name: notion-secret
                secret:
                  secretName: {{ .Values.routes.kindleHighlightsSync.workflow.notionSecretName | default .Values.global.workflow.notionSecretName }}
        version: v1alpha1
      name: notion-hooks-kindle-highlights-sync
{{ end -}}
---
{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- .Values.ingress.annotations | toYaml | nindent 4 }}
  labels:
    {{- include "notion-hooks.labels" . | nindent 4 }}
  name: {{ .Values.ingress.name | default (include "notion-hooks.fullname" .) }}
  namespace: {{ .Release.namespace }}
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - backend:
          service:
            name: {{ include "notion-hooks.fullname" . }}-eventsource-svc
            port:
              number: {{ .Values.global.webhook.servicePort }}
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
{{- end }}
