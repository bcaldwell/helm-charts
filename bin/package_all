#!/usr/bin/env ruby

require 'fileutils'
require 'yaml'
require "net/http"

DOMAIN="https://charts.bcaldwell.ca"
CHART_LOCATION="charts-repo"
IGNORED_DIRS=%W(#{CHART_LOCATION} bin)

def package_chart(name)
  return puts " (doesnt exist or isnt a directory)"  unless File.directory? name
  chart = YAML.load_file(File.join(name, "Chart.yaml"))
  return print " (Charts.yaml couldn't be parsed)" if chart.nil?
  current_version = chart["version"]
  return print " (already packaged)" if File.exists? File.join(CHART_LOCATION, "#{name}-#{current_version}.tgz")
  `helm package #{name}`
  packages = Dir.glob("#{name}-*.tgz")
  return print " (couldnt find packaged version of #{name})" if packages.empty?
  FileUtils.mv(packages.first, "#{CHART_LOCATION}/")
end

def remote_chart_version_exists?(name, version)
  url = File.join(DOMAIN, "#{name}-#{version}.tgz")
  url = URI.parse(url)
  req = Net::HTTP.new(url.host, url.port)
  req.use_ssl = true if url.scheme == "https"
  res = req.request_head(url.path)
  res.code == "200"
end

def puts_success
 puts " \x1b[32mâœ“\x1b[0m"
end
Dir.mkdir CHART_LOCATION unless File.directory? CHART_LOCATION

dirs = Dir["*"].reject { |e| !File.directory?(e) }

dirs.each do |dir|
  next if IGNORED_DIRS.include? dir
  print dir
  package_chart dir
  puts_success
end

puts ""

print "creating index.yaml"
`helm repo index #{CHART_LOCATION} --url #{DOMAIN}`
puts_success
